{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n  create(string) {\r\n    const container = document.createElement(\"template\");\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node);\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  },\r\n  attr(node, name, value) {\r\n    // 重载\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      node.getAttribute(name);\r\n    }\r\n  },\r\n  text(node, string) {\r\n    // 适配\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string;\r\n      } else {\r\n        node.textContent = string;\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      // dom.style(div,'color','red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        // dom.style(div,'color')\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        // dom.style(div,{color})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  find(selector, scope) {\r\n    return (scope, document).querySelectorAll(selector);\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}